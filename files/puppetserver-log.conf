input {
  tcp {
    port => 5000
    type => "puppetserver"
    codec => multiline {
      pattern => "^%{TIMESTAMP_ISO8601} "
      negate => true
      what => "previous"
    }
  }
  tcp {
    port => 5001
    type => "console-services-api-access"
  }
  tcp {
    port => 5002
    type => "puppetaccess"
  }
}

filter { 
  if [type] == "puppetserver" {
    grok { 
      match => { "message" => 
        "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} (?<ID>\s\[.*?]|\[.*?]) (?<Source>\[.*?]) %{GREEDYDATA:message}" 
      }
    }
    date {
      match => [ "timestamp", "YYYY-MM-dd HH:mm:ss,SSS", "ISO8601"  ]
      target => "timestamp"
    }
  }

  if [type] == "puppetaccess" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG} %{NUMBER:duration:int} %{GREEDYDATA:ruby}"
        }
     }
    mutate {
      convert => {
        "bytes" => "integer"
      }
    }
    date {
        match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
        target => "timestamp"
    }
  }
  
  if [type] == "console-services-api-access" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    mutate {
      convert => {
        "bytes" => "integer"
      }
    }
    date {
        match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
        target => "timestamp"
    }
  }
}

output {
  elasticsearch {
    hosts => "localhost:9200"
    index => "cust-splunk"
  }
}
